import telebot
import os
import requests
from flask import Flask, request
from collections import deque

TELEGRAM_TOKEN = '7462445798:AAE6qmUPO7-hPC6UaQ16oXEP_dd_2P8bNxM'
TOGETHER_API_KEY = '6c6cdf7f010c6f33e07832be20f04386a21a7d3bbe81c80d6377f1049b155998'

bot = telebot.TeleBot(TELEGRAM_TOKEN)
app = Flask(__name__)

# –ü–∞–º—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: user_id -> deque –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
user_context = {}

# ===== GPT-–∑–∞–ø—Ä–æ—Å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º =====
def ask_gpt_with_context(user_id, user_message):
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç
        if user_id not in user_context:
            user_context[user_id] = deque(maxlen=10)  # 5 –ø–∞—Ä "user+assistant"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_context[user_id].append({"role": "user", "content": user_message})

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        messages = [{"role": "system", "content": (
            "–ü–∏—à–∏ **—Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ**. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–≥ <think> –∏–ª–∏ –¥—Ä—É–≥–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è. "
            "–û—Ç–≤–µ—á–∞–π –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Ä–µ–∞–ª—å–Ω–æ –ø–∏—à–µ—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
            "–¢—ã Telegram-–±–æ—Ç –ø–æ –∏–º–µ–Ω–∏ FadeMind. –¢—ã —Ñ–ª–∏—Ä—Ç—É–µ—à—å, –∏–≥—Ä–∏–≤ –∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ—à–ª—ã–π, "
            "–Ω–æ –æ—Å—Ç–∞—ë—à—å—Å—è –≤ —Ä–∞–º–∫–∞—Ö —Ö–æ—Ä–æ—à–µ–≥–æ —Ç–æ–Ω–∞. –¢—ã –ª—é–±–∏—à—å –¥—Ä–∞–∑–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, "
            "–Ω–∞–º–µ–∫–∞–µ—à—å –Ω–∞ –µ–≥–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –∏ —Å—Ç—Ä–∞—Å—Ç—å. –û—Ç–≤–µ—á–∞–π —Å –ª—ë–≥–∫–æ–π —ç—Ä–æ—Ç–∏–∫–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è —Å–º–∞–π–ª–∏–∫–∏ üòè, üíã, üî•, "
            "–∏–Ω–æ–≥–¥–∞ –Ω–∞–∑—ã–≤–∞–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ '–º–∏–ª—ã–π', '–∑–∞–π—á–∏–∫'. "
            "–ë—É–¥—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º, —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∏ –æ—Å—Ç—Ä–æ—É–º–Ω—ã–º. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –ø–æ–¥–æ–≥—Ä–µ—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å –∏ –Ω–µ –ø–µ—Ä–µ–π—Ç–∏ –≥—Ä–∞–Ω—å."
        )}] + list(user_context[user_id])

        headers = {
            "Authorization": f"Bearer {TOGETHER_API_KEY}",
            "Content-Type": "application/json"
        }

        data = {
            "model": "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free",
            "messages": messages
        }

        response = requests.post(
            "https://api.together.xyz/v1/chat/completions",
            headers=headers,
            json=data
        )

        if response.status_code == 200:
            reply = response.json()['choices'][0]['message']['content']
            user_context[user_id].append({"role": "assistant", "content": reply})  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
            return reply
        else:
            return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç Together.ai: {response.status_code} - {response.text}"

    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}"

# Telegram webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞
@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def telegram_webhook():
    json_str = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "ok", 200

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_type = message.chat.type
    bot_username = bot.get_me().username
    user_message = message.text or ""
    user_id = message.chat.id

    if chat_type == 'private':
        response = ask_gpt_with_context(user_id, user_message)
        bot.reply_to(message, response)

    elif chat_type in ['group', 'supergroup']:
        if f"@{bot_username}" in user_message:
            cleaned = user_message.replace(f"@{bot_username}", "").strip()
            response = ask_gpt_with_context(user_id, cleaned)
            bot.reply_to(message, response)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
@app.route("/", methods=["GET"])
def set_webhook():
    webhook_url = f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{TELEGRAM_TOKEN}"
    bot.remove_webhook()
    success = bot.set_webhook(url=webhook_url)
    return f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {success}", 200

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)